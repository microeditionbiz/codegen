//
//  FeatureToggles.generated.swift
//  FeatureToggles
//
//  Generated by codegen. Don't change this file manually.
//  Run `sh WordOfTheDay/FeatureToggles/Codegen/generate.sh` to regenerate it.
//

import Foundation

{% for identifier, content in parameters where content.valueType == "STRING" %}  
{% if forloop.first %}
public extension FeatureToggle where T == String {
{% endif %}
    /// {{ content.description }}
    static let {{ identifier }}: FeatureToggle = .init(key: "{{ identifier }}", fallback: "{{ content.defaultValue.value }}")
{% if forloop.last %} 
} 
{% endif %}

{% endfor %}
{% for identifier, content in parameters where content.valueType == "NUMBER" %}
{% if forloop.first %} 
public extension FeatureToggle where T == NSNumber {
{% endif %}
    /// {{ content.description }}
    static let {{ identifier }}: FeatureToggle = .init(key: "{{ identifier }}", fallback: {{ content.defaultValue.value }})
{% if forloop.last %} 
}
{% endif %}

{% endfor %}
{% for identifier, content in parameters where content.valueType == "BOOLEAN" %}
{% if forloop.first %} 
public extension FeatureToggle where T == Bool {
{% endif %}
    /// {{ content.description }}
    static let {{ identifier }}: FeatureToggle = .init(key: "{{ identifier }}", fallback: {{ content.defaultValue.value }})
{% if forloop.last %}
}
{% endif %}

{% endfor %}
{% for identifier, content in parameters where content.valueType == "ANY" %}
{% if forloop.first %}
public extension FeatureToggle where T == Any {
{% endif %}
    /// {{ content.description }}
    static let {{ identifier }}: FeatureToggle = .init(key: "{{ identifier }}", fallback: {{ content.defaultValue.value }})
{% if forloop.last %} 
}
{% endif %}

{% endfor %}