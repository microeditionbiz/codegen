//
//  main.swift
//  File-Input-Codegenerator
//
//  Created by Pablo Ezequiel Romero Giovannoni on 08/08/2022.
//

import Foundation
import ArgumentParser
import Generator

//$ <command> -i sentence.yml -t templates/template.stencil -o Autogenerated.swift
struct Codegen: ParsableCommand {
    // Passed as --input or -i in any order
    @Option(name: .shortAndLong, help: "The input file path used as Context. It has to include a yml, json or plist extension.")
    var input: String

    // Passed as --template or -t in any order
    @Option(name: .shortAndLong, help: "The Stencil template file path.")
    var template: String

    // Passed as --output or -o in any order
    @Option(name: .shortAndLong, help: "The output autogenerated file path.")
    var output: String

    func run() {
        do {
            let startDate = Date()
            let generatorInput = try generatorInput(url: URL(fileURLWithPath: input))
            let generator = Generator(templatesPath: [""])

            let generatedFiles = try generator.run(
                input: generatorInput,
                templateFile: template,
                output: output
            )

            print(createOutput(for: .success((generatedFiles, startDate))))
        } catch {
            print(createOutput(for: .failure(error)))
        }
    }

    private func createOutput(for result: Result<([String], Date), Error>) -> String {
        var output = ""

        switch result {
        case let .success((generatedFiles, startDate)):
            let count = generatedFiles.count
            output = "\nGenerated \(count) file\(count == 1 ? "" : "s")"
            output += String(format: " in %.4f seconds ðŸš€\n\n", Date().timeIntervalSince(startDate))
            output += generatedFiles
                .map { "Â· " + $0 }
                .joined(separator: "\n")

        case let .failure(error):
            output = "\nError running generator ðŸ˜©\n"
            output += error.localizedDescription
        }

        return output + "\n"
    }
}

Codegen.main()
